// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"
	models "snakealive/m/internal/models"

	gomock "github.com/golang/mock/gomock"
)

// MockCountryStorage is a mock of CountryStorage interface.
type MockCountryStorage struct {
	ctrl     *gomock.Controller
	recorder *MockCountryStorageMockRecorder
}

// MockCountryStorageMockRecorder is the mock recorder for MockCountryStorage.
type MockCountryStorageMockRecorder struct {
	mock *MockCountryStorage
}

// NewMockCountryStorage creates a new mock instance.
func NewMockCountryStorage(ctrl *gomock.Controller) *MockCountryStorage {
	mock := &MockCountryStorage{ctrl: ctrl}
	mock.recorder = &MockCountryStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCountryStorage) EXPECT() *MockCountryStorageMockRecorder {
	return m.recorder
}

// GetById mocks base method.
func (m *MockCountryStorage) GetById(ctx context.Context, id int) (models.Country, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", ctx, id)
	ret0, _ := ret[0].(models.Country)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockCountryStorageMockRecorder) GetById(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockCountryStorage)(nil).GetById), ctx, id)
}

// GetByName mocks base method.
func (m *MockCountryStorage) GetByName(ctx context.Context, name string) (models.Country, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByName", ctx, name)
	ret0, _ := ret[0].(models.Country)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByName indicates an expected call of GetByName.
func (mr *MockCountryStorageMockRecorder) GetByName(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByName", reflect.TypeOf((*MockCountryStorage)(nil).GetByName), ctx, name)
}

// GetCountriesList mocks base method.
func (m *MockCountryStorage) GetCountriesList(ctx context.Context) (models.Countries, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCountriesList", ctx)
	ret0, _ := ret[0].(models.Countries)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCountriesList indicates an expected call of GetCountriesList.
func (mr *MockCountryStorageMockRecorder) GetCountriesList(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCountriesList", reflect.TypeOf((*MockCountryStorage)(nil).GetCountriesList), ctx)
}
