version: '3.7'
networks:
    net:
services:
  postgres:
    container_name: postgres_container
    image: postgres:14.4-alpine3.16
    environment:
      POSTGRES_DB: "b2b"
      POSTGRES_USER: "b2b"
      POSTGRES_PASSWORD: "b2b"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - .:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data
    ports:
      - "5431:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U b2b -d b2b"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - net


  auth_service:
    build:
      dockerfile: Dockerfile.auth_service
      context: .
      args:
        - APP_PKG_NAME=b2b/m
        - GOOS=linux
    image: net.entrypoint.auth_service
    ports:
      - "10123:10123"
      - "11123:8080"
    environment:
      - USER_DB_URL=postgres://b2b:b2b@postgres:5432/b2b
      - USER_GRPC_PORT=10123 
      - USER_PREFIX_LEN=3
    networks:
      - net
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  fastorder_service:
    build:
      dockerfile: Dockerfile.fastOrder_service
      context: .
      args:
        - APP_PKG_NAME=b2b/m
        - GOOS=linux
    image: net.entrypoint.fastorder_service
    ports:
      - "10124:10124"
      - "11124:8080"
    environment:
      - FASTORDER_DB_URL=postgres://b2b:b2b@postgres:5432/b2b
      - FASTORDER_GRPC_PORT=10124
    networks:
      - net
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  company_service:
    build:
      dockerfile: Dockerfile.company_service
      context: .
      args:
        - APP_PKG_NAME=b2b/m
        - GOOS=linux
    image: net.entrypoint.company_service
    ports:
      - "10125:10125"
      - "11125:8080"
    environment:
      - COMPANY_DB_URL=postgres://b2b:b2b@postgres:5432/b2b
      - COMPANY_GRPC_PORT=10125
    networks:
      - net
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  productscategories_service:
    build:
      dockerfile: Dockerfile.productsCategories_service
      context: .
      args:
        - APP_PKG_NAME=b2b/m
        - GOOS=linux
    image: net.entrypoint.productscategories_service
    ports:
      - "10126:10126"
      - "11126:8080"
    environment:
      - PRODUCTSCATEGORIES_DB_URL=postgres://b2b:b2b@postgres:5432/b2b
      - PRODUCTSCATEGORIES_GRPC_PORT=10126
    networks:
      - net
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  gateway:
    depends_on:
      - postgres
      - auth_service
      - fastorder_service
      - company_service
      - productscategories_service
    build:
      dockerfile: Dockerfile.gateway
      context: .
      args:
        - APP_PKG_NAME=b2b/m
        - GOOS=linux
    image: net.entrypoint.gateway
    ports:
      - "8080:8081"
      - "18080:8080"
    environment:
      - GATEWAY_HTTP_PORT=:8081
      - GATEWAY_AUTH_ENDPOINT=host.docker.internal:10123
      - GATEWAY_FASTORDER_ENDPOINT=host.docker.internal:10124
      - GATEWAY_COMPANY_ENDPOINT=host.docker.internal:10125
      - GATEWAY_PRODUCTSCATEGORIES_ENDPOINT=host.docker.internal:10126
      - GATEWAY_DB_URL=postgres://b2b:b2b@postgres:5432/b2b
    networks:
      - net
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"